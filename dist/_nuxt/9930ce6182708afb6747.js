(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{229:function(e,t){const o={render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"frontmatter-markdown"},[o("interface-description",{attrs:{image:"autofollow-ui.png"}},[o("h3",[e._v("Interface description")]),e._v(" "),o("p",[o("strong",[e._v("Follow axis")]),e._v(" defines which axis will be controlled in order to position this container.")]),e._v(" "),o("p",[o("strong",[e._v("Direction")]),e._v(" contols which aling will be applied. By left edge, by center, by right edge.")]),e._v(" "),o("p",[o("strong",[e._v("X-pos if self empty")]),e._v(" or "),o("strong",[e._v("Y-pos if self empty")]),e._v(" define the position when this container is empty and has zero bounding box. Usefull to avoid blinking effect.")]),e._v(" "),o("p",[o("strong",[e._v("X-pos default")]),e._v(" or "),o("strong",[e._v("Y-pos default")]),e._v(" define the position of this container when target containers are gone. I mean, when the target has zero bounding box (disappear).")]),e._v(" "),o("p",[o("strong",[e._v("Container 1")]),e._v(", "),o("strong",[e._v("Container 2")]),e._v(", ... define observed target containers which will be followed by this container. You can change the count inside the script by changin the "),o("code",{pre:!0},[e._v("quantity_of_container")]),e._v(" variable in the beginning of the script.")])]),e._v(" "),o("p",[e._v("If you have tried to use standard Autofollow plugin you already know its limits.")]),e._v(" "),o("media-image",{attrs:{name:"autofollow-plugin.png"}}),e._v(" "),o("p",[e._v("What I do not like in standard Autofollow:")]),e._v(" "),e._m(0),e._v(" "),o("p",[e._v("Compare standard and my Autofollow:")]),e._v(" "),o("media-youtube",{attrs:{url:"https://www.youtube.com/embed/au4bwUw4Vwg"}}),e._v(" "),o("p",[e._v("For changing the count of observing containers, overwrite this setting:")]),e._v(" "),o("media-image",{attrs:{name:"autofollow-change-count.png"}})],1)},staticRenderFns:[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ul",[o("li",[e._v("It is working properly only in one space coordinates, it's inside one common parent. And I want to get a result in global coordinates, independently from local scales.")]),e._v(" "),o("li",[e._v("Working properly only with scale = 1.")]),e._v(" "),o("li",[e._v("Every time I need to reinvestigate how it works! It just annoy me.")]),e._v(" "),o("li",[e._v("Stays in previous position when target container gets invisible. I need some defined position in this case.")]),e._v(" "),o("li",[e._v("Does not consider invisible object by scaling! If object is hidden - it’s ok. But if Object is scaled to 0 — it stays active and visible for standard Autofollow.")]),e._v(" "),o("li",[e._v("For the reason above I can’t autofollow to several containers. I want to consider only visible (by visually) objects. If object is smaller than a pixel I want to mark it as invisible and exclude from autofollow.")]),e._v(" "),o("li",[e._v("Only sharp autofollow, without any inertion. I want to see natural move of following as it looks pretty nice on the screen.")]),e._v(" "),o("li",[e._v("Always consider self size. I want to autofollow only pivot point for independent animation of appearing.")])])}]};e.exports={attributes:{title:"Multi Follow",description:"Alternative of standart Autofollow plugin. Can smart follows to several targets.",category:"position",link:"https://bitbucket.org/vizrt/vizartist-script/src/master/dudin-autofollow/",file:"autofollow.vb"},meta:{resourcePath:"/Users/svetozar/rails/dudin.tv/content/scripts/multi-follow.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=o.render,this.$options.staticRenderFns=o.staticRenderFns}}}}}}]);