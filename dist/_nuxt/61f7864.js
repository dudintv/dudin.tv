(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{226:function(e,t){const r={render:function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"frontmatter-markdown"},[r("interface-description",{attrs:{image:"interface.png"}},[r("h3",[e._v("Interface description")]),e._v(" "),r("p",[r("strong",[e._v("Common border")]),e._v(" allows you to control all four sides by a single parameter. If it’s off you can control sides separately.")]),e._v(" "),r("p",[r("strong",[e._v("Border")]),e._v(" controls how many cut texture to construct borders part. For example, 20% grab 40% of texture whole width to create borders and left 60% as a central part.")]),e._v(" "),r("p",[e._v("You can "),r("strong",[e._v("get size of some container")]),e._v(", just like in “TextBG” standard plugin.")]),e._v(" "),r("p",[r("strong",[e._v("Magnifier")]),e._v(" corrects size to shrink or stretch this texture. E.g. that way you can increase/decrease shadow size.")])]),e._v(" "),r("media-youtube",{attrs:{url:"https://www.youtube.com/embed/AbJf5V1j-Ko"}}),e._v(" "),r("h2",[e._v("Theory")]),e._v(" "),r("p",[e._v("Imagine, you need to create nice looking shadows for a plane. You are just creating a texture faking shadows effect. If you know the size in advance — all is ok. But what to do if you are creating some customizable effect? You can't know what size the rectangle will have. 9 part texture rescue you!")]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-before-and-after.png"}}),e._v(" "),r("h3",[e._v("1. Lets start from painting square texture of shadow effect.")]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-example-shadow-source.png"}}),e._v(" "),r("h3",[e._v("2. Understand how to slice it.")]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-example-shadow-sliced.png"}}),e._v(" "),r("p",[e._v("Center is too big. Actually it can be 1x1 pixel. I leave this non optimal version for clarity.")]),e._v(" "),r("h3",[e._v("3. How it sctreched?")]),e._v(" "),r("p",[e._v("Simple one rectangle take this result:")]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-example-stretched.png"}}),e._v(" "),r("p",[e._v('If we are applied "9 part" concept, we can get this:')]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-example-working.png"}}),e._v(" "),r("p",[e._v("We just change size of only three parts. It's the central row.")]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-example-how-it-working.png"}}),e._v(" "),r("p",[e._v("This way you can create a glow, shadow and frame effects, etc:")]),e._v(" "),r("media-image",{attrs:{name:"9-part-texture-cover.png"}}),e._v(" "),r("h2",[e._v("Practice")]),e._v(" "),r("p",[e._v('I wrote the script to provide solution "9 part texture" in vizrt.')]),e._v(" "),r("p",[e._v("How to use it:")]),e._v(" "),r("ol",[r("li",[e._v("Drop script to some container")]),e._v(" "),r("li",[e._v('Click "Create base planes" for creating nine sub-containers.')]),e._v(" "),r("li",[e._v("Drop texture to all nine sub-containers.")]),e._v(" "),r("li",[e._v('Set "Source of size", position...')]),e._v(" "),r("li",[e._v('Set "Border" parameter correspondently to texture style:\n'),r("media-image",{attrs:{"img.html":"",name:"script-9-part-texture-setup.gif"}})],1)]),e._v(" "),r("p",[e._v("There is an issue when a central row or column is too small. This is texture filtering.\nThe issue can be solved by setup maximum Anisotropic Filter on all nine textures:")]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-texture-anisotropic-filter.gif"}}),e._v(" "),r("media-image",{attrs:{name:"script-9-part-texture-filter-for-all.png"}}),e._v(" "),r("h2",[e._v("Try it yourself")]),e._v(" "),r("p",[e._v("I've prepared some textures for you ;)")]),e._v(" "),r("p",[e._v("I use white color for easy changing color in vizrt. Just add a material ;) If you want black color on a shadow, just add black material on the master container:")]),e._v(" "),r("media-image",{attrs:{name:"script-9-part-add-black-material.png"}}),e._v(" "),r("h3",[e._v("Glow/shadow")]),e._v(" "),r("p",[r("media-image",{attrs:{name:"try/RectangleBlur10.png",transparent:""}}),e._v(" "),r("br"),e._v(" "),r("media-image",{attrs:{name:"try/RectangleBlur30.png",transparent:""}}),e._v(" "),r("br"),e._v(" "),r("media-image",{attrs:{name:"try/RectangleBlur50.png",transparent:""}}),e._v(" "),r("br"),e._v(" "),r("media-image",{attrs:{name:"try/RectangleBlur70.png",transparent:""}}),e._v(" "),r("br")],1),e._v(" "),r("h3",[e._v("Frames")]),e._v(" "),r("p",[r("media-image",{attrs:{name:"try/ArtFrame512.png",transparent:""}}),e._v(" "),r("br"),e._v(" "),r("media-image",{attrs:{name:"try/NeonFrame128.png",transparent:""}}),e._v(" "),r("br"),e._v(" "),r("media-image",{attrs:{name:"try/GlowFrame128.png",transparent:""}}),e._v(" "),r("br")],1)],1)},staticRenderFns:[]};e.exports={attributes:{title:"9 part texture",description:"Script for stretching texture with saving quality of borders and corners.",category:"texture",path:"dudin-texture/dudin-9parttexture",file:"9parttexture.vb"},meta:{resourcePath:"/Users/dmitrydudin/vizrt/dudin.tv/content/scripts/9-part-texture.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=r.render,this.$options.staticRenderFns=r.staticRenderFns}}}}}}]);